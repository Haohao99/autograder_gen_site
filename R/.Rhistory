source('C:/Users/haohu/Downloads/one_useful_variable.r')
source('C:/Users/haohu/Downloads/one_useful_variable.r')
# Have a single useful variable and 99 garbage variables for prediction response
# when we fit the model we see y = yhat indicating very good predition on training data.
# But model performs badly when we look at new data FROM THE SAME MODEL
# Ridge regression adds complexity penalty to "complexity" of regression coeffs (a)
#
n = 100
d = 100
X = matrix(rnorm(n*d),nrow = n, ncol=d);
y = 5*X[,1] + rnorm(n);
plot(X[,1],y);
a = solve(t(X) %*% X, t(X) %*% y);
#lambda = .5;      # for ridge regression
#a = solve(t(X) %*% X + lambda*diag(d), t(X) %*% y);   # ridge regression solves different optimization
yhat = X %*% a;
plot(y,yhat);    #
View(X)
y
5*X[,1]
5*X[1,1]
plot(X[,1],y);
a
source('E:/Rworkspace/MidtermQ5.R')
y
n = 100
d = 100
X = matrix(rnorm(n*d),nrow = n, ncol=d);
y = 5*X[,1] + rnorm(n);
plot(X[,1],y);
#a = solve(t(X) %*% X, t(X) %*% y);
lambda = .5;      # for ridge regression
a = solve(t(X) %*% X + lambda*diag(d), t(X) %*% y);   # ridge regression solves different optimization
yhat = X %*% a;
plot(y,yhat);
source('C:/Users/haohu/Downloads/forward_selection.r')
source('E:/Rworkspace/Homework4/polynomial_regression_synthetic.r')
x
View(X)
source('E:/Rworkspace/MidtermQ5.R')
x[,1]
x[1]
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
Pi
pi
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
plot(X[,1],y);
plot(x[,1],y);
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
plot(y,yhat);
source('E:/Rworkspace/MidtermQ5.R')
a
source('E:/Rworkspace/MidtermQ5.R')
a
#(a)
n = 5
d = 5
X = matrix(rnorm(n*d),nrow = n, ncol=d);
y = rnorm(n)+rnorm(n)*X[,1]+rnorm(n)*X[,1]^2+rnorm(n)*cos(2*pi*X[,1]/6)+rnorm(n)*sin(2*pi*X[,1]/6)
plot(X[,1],y);
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
source('E:/Rworkspace/MidtermQ5.R')
#(a)
n = 5
d = 5
X = matrix(rnorm(n*d),nrow = n, ncol=d);
y = rnorm(n)+rnorm(n)*X[,1]+rnorm(n)*X[,1]^2+rnorm(n)*cos(2*pi*X[,1]/6)+rnorm(n)*sin(2*pi*X[,1]/6)
plot(X[,1],y);
lambda = .5;
a = solve(t(X) %*% X + lambda*diag(d), t(X) %*% y);
yhat = X %*% a;
plot(y,yhat);
#(a)
n = 5
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
p_unload(all)
library(datasets)  # Load/unload base packages manually
head(iris)
plot(iris$Species)  # Categorical variable
shiny::runApp('shiny.rstudio.com-tutorial-master/shiny.rstudio.com-tutorial-master/part-1-code')
library(shiny); runApp('shiny.rstudio.com-tutorial-master/shiny.rstudio.com-tutorial-master/part-1-code/02-hist-app.R')
shinyApp(ui = ui, server = server)
library(shiny); runApp('autograde.R')
shiny::runApp('autograder_gen_site/R')
source('E:/Rworkspace/autograder_gen_site/R/ui.R')
library(shiny)
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('E:/Rworkspace/test.R')
runApp('test.R')
runApp('autograder_gen_site/R')
x
x= 1
x = 1
names(x)
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
force(input)
runApp()
runApp()
runApp('autograder_gen_site/R')
runApp()
runApp()
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('E:/Rworkspace/test.R')
runApp('test.R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
runApp('autograder_gen_site/R')
